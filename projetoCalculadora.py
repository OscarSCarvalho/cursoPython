'''
  Projeto: Calculadora de 4 opera√ß√µes com tratamento de erros
üîπ Funcionalidades:
Soma

Subtra√ß√£o

Multiplica√ß√£o

Divis√£o

Sair
 
------------------------------------------------------------------------------------
O que estamos aplicando aqui:
try para proteger a entrada e os c√°lculos

except ValueError para entrada n√£o num√©rica

except ZeroDivisionError para evitar a divis√£o por zero

except Exception como seguran√ßa extra (opcional)

finally para mostrar sempre que a opera√ß√£o terminou

 '''




def menu():
    print("\n=== CALCULADORA SIMPLES ===") # Exibe o t√≠tulo do menu
    print("1 - Soma")
    print("2 - Subtra√ß√£o")
    print("3 - Multiplica√ß√£o")
    print("4 - Divis√£o")
    print("5 - Sair")


while True: # Loop infinito para manter o programa rodando at√© o usu√°rio escolher sair
    menu()
    escolha = input("Escolha uma op√ß√£o (1 a 5): ")

    if escolha == "5":
        print("Encerrando o programa. At√© logo!")
        break

    try:
        num1 = float(input("Digite o primeiro n√∫mero: "))
        num2 = float(input("Digite o segundo n√∫mero: "))

        if escolha == "1":
            print(f"Resultado: {num1 + num2}")
        elif escolha == "2":
            print(f"Resultado: {num1 - num2}")
        elif escolha == "3":
            print(f"Resultado: {num1 * num2}")
        elif escolha == "4":
            print(f"Resultado: {num1 / num2}")
        else:
            print("Op√ß√£o inv√°lida. Escolha de 1 a 5.")

    except ValueError:
        print("Erro: Voc√™ digitou um valor que n√£o √© n√∫mero.")
    except ZeroDivisionError:
        print("Erro: Divis√£o por zero n√£o √© permitida.")
    except Exception as erro:
        print(f"Ocorreu um erro inesperado: {erro}")

    finally:
        print("Opera√ß√£o finalizada.\n")
